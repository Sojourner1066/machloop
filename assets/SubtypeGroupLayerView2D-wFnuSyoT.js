import{cQ as s,cR as n,M as d,a0 as u,a2 as l}from"./index-BCSVvjKE.js";import{d as g}from"./FeatureLayerView2D-CUITw5xH.js";import"./Container-CNbOd1fT.js";import"./featureConversionUtils-D8tC_IN5.js";import"./OptimizedFeature-CAs8C_6w.js";import"./memoryEstimations-B7_Jwj04.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-5XGO9pvP.js";import"./AttributeBinsFeatureSet-CMo_dGKw.js";import"./AttributeBinsQuery-0-g_WFaE.js";import"./queryUtils-BoaFe4en.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-DKHQSzaq.js";import"./LayerView-CLlz1xmb.js";import"./layerViewUtils-0c-tok9A.js";import"./TechniqueInstance-CIvSNEhV.js";import"./UpdateTracking2D-BabZ4s23.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-UTnbVDfc.js";import"./rasterizingUtils-DiZURDwE.js";import"./floatRGBA-CFy-2SA-.js";import"./Rect-CUzevAry.js";import"./Utils-D4O3KAMI.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CHpIv-62.js";import"./VertexArrayObject-CWSP7Dtc.js";import"./TileContainer-DRvhRlwz.js";import"./WGLContainer-B7ZgRvVt.js";import"./ProgramTemplate-7-I-ic88.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BnwSCDGd.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-DsslgJpE.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CGrQHD0I.js";import"./ShaderBuilder-4Epc3uLW.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DF79sej7.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-C-qef0Pl.js";import"./constants-B4mRqufT.js";import"./parquet-C7dIRqkG.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-Ckrzy3Gu.js";import"./RefreshableLayerView-Bd898Vj9.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};
