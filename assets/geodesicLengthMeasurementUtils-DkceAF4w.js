import{a as s}from"./quantityUtils-CqnQm8eu.js";import{aj as i,ah as l,U as o,iU as f}from"./index-BCSVvjKE.js";import{y as c,q as m,b as y,R}from"./geodesicUtils-43dYgYaw.js";function g(n){return c(n)||i(n)}function p(n,e,r,...u){return c(n)?e.apply(void 0,u):i(n)?r.apply(void 0,u):null}function q(n){const{spatialReference:e}=n;return p(e,$,j,n)}function w(n,e){if(!l(n.spatialReference,e.spatialReference))return null;const{spatialReference:r}=n;return t[0]=n.x,t[1]=n.y,t[2]=n.hasZ?n.z:0,a[0]=e.x,a[1]=e.y,a[2]=e.hasZ?e.z:0,d(t,a,r)}function d(n,e,r){return p(r,h,x,n,e,r)}function h(n,e,r){return s(m(z,n,e,r).distance,"meters")}function x(n,e,r){return s(f(v(n,e,r),"meters"),"meters")}function $(n){return s(R([n],"meters")[0],"meters")}function j(n){return s(f(n,"meters"),"meters")}function v(n,e,r){return{type:"polyline",spatialReference:r,paths:[[[...n],[...e]]]}}const z=new y,t=o(),a=o();export{g as e,w as f,q as m,p as r,d as u};
