const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticDensifyByLength-DOql6dl7.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/Transformation2D-B_tst7So.js","assets/ProjectionTransformation-Dsl-YPnA.js","assets/index-BCSVvjKE.js","assets/index-CrYBktwj.css"])))=>i.map(i=>d[i]);
import{_ as i,et as a,eu as s,ev as _}from"./index-BCSVvjKE.js";import{s as c}from"./SimpleGeometryCursor-B92kdZ15.js";let r;function f(){return!!r&&s()}async function p(){if(!f()){const[t,n]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-DOql6dl7.js"),__vite__mapDeps([0,1,2,3,4,5])),i(()=>import("./ProjectionTransformation-Dsl-YPnA.js").then(e=>e.aW),__vite__mapDeps([3,2,1,4,5])).then(e=>e.aG).then(({injectPe:e})=>e),a()]);r=new t.OperatorGeodeticDensifyByLength,n(_)}}function v(t,n,e,o){return r.execute(t,n,e,o,null)}function y(t,n,e,o){const u=r.executeMany(new c(t),n,e,o,null);return Array.from(u)}function P(){return r.supportsCurves()}export{P as a,y as c,p as i,f as s,v as u};
