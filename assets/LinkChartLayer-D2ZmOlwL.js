import{V as Y,bE as ve,s as ne,x as ze,f3 as Ge,n as G,cD as Z,am as q,a2 as K,k as me,aZ as Pe,bG as ye,b7 as De,f4 as Fe,d3 as Oe,o as T,v,w as Be}from"./index-BnvXCOal.js";import{S as ee,E as Ue,D as $e,C as je,o as Qe,g as We,a as He,b as Ve,c as qe,_ as Je,P as Ze,A as Ke,v as Xe,d as $,e as Ye,f as oe,u as Ie,i as xe}from"./KnowledgeGraphSublayer-DMBNO5RJ.js";import{S as et}from"./MultiOriginJSONSupport-DTjGkcWT.js";import{s as X}from"./featureConversionUtils-CmFMXzn8.js";import{_ as I,I as re,t as se,S as x,o as tt}from"./constants-B4mRqufT.js";import{p as at}from"./BlendLayer-CcS0AiVd.js";import{b as it}from"./OperationalLayer-B595cCIl.js";import{t as nt}from"./ScaleRangeLayer-BfQg43Dx.js";import{y as ot}from"./commonProperties-Dje_VWi3.js";import{I as rt}from"./knowledgeGraphService-DOP8meme.js";import"./OptimizedFeature-C6mq9JTm.js";import"./memoryEstimations-CgKxTfPy.js";import"./GraphicsLayer-CpYcu9kc.js";import"./ElevationInfo-_zkowxr5.js";import"./lengthUtils-BULRlDy9.js";import"./GraphQueryStreaming-iZtgQ2XI.js";import"./FeatureStore-3F4g1OWe.js";import"./BoundsStore-BNTaLKxL.js";import"./PooledRBush-CPIS6Hd_.js";import"./timeSupport-CCVo9mx-.js";import"./queryUtils-BbXXCFfE.js";import"./json-Wa8cmqdu.js";import"./optimizedFeatureQueryEngineAdapter-GcjfMA_3.js";import"./QueryEngine-BzlhqoCr.js";import"./WhereClauseCache-Dgrdb1iY.js";import"./LRUCache-CVkPrTgN.js";import"./MemCache-C-Nfx2no.js";import"./WhereClause-DxC4tFtf.js";import"./TimeOnly-CK6o1IbC.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./quantizationUtils-BIxUeD3r.js";import"./utils-BrCcQfny.js";import"./heatmapUtils-CtONkQbG.js";import"./vec42-r_rjmetX.js";import"./vec4f64-o2zAXfmz.js";import"./utils-BRTuCz6Z.js";import"./utils-B_zU764D.js";import"./ClassBreaksDefinition-BpDSQ-DZ.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-DGm8_bSu.js";import"./NormalizationBinParametersMixin-DSi88dGc.js";import"./FieldsIndex-BUP-kEKc.js";import"./clientSideDefaults-BWGkYSyZ.js";import"./defaultsJSON-GKolV7NZ.js";import"./fieldProperties-CTAjBfbg.js";import"./labelingInfo-BY_2bmzW.js";import"./SimpleRenderer--05LNEAo.js";import"./commonProperties-BtmAPvhe.js";import"./colorRamps-BtHD6lRq.js";import"./ColorStop-DKLIbh6w.js";import"./visualVariableUtils-CsmTuDyq.js";import"./jsonUtils-Du5tZPpz.js";import"./defaults-Bcfj-Otq.js";import"./UniqueValueRenderer-C2h8zTjm.js";import"./defaultCIMValues-ubRuA6gU.js";import"./enums-BQDXKJnw.js";import"./RendererLegendOptions-FePfC4i6.js";import"./styleUtils-CWAJkKJj.js";import"./labelUtils-amu_CKvT.js";import"./DisplayFilteredLayer-BQZage4a.js";import"./layerContainerType-C5CzMsLd.js";import"./scaleUtils-DL6nepZp.js";import"./displayFilterUtils-hnpDiIlV.js";import"./FeatureEffectLayer-C9YgMvQu.js";import"./FeatureEffect-3gHnhEZH.js";import"./jsonUtils-DNdrYfyn.js";import"./parser-BqlCI5FX.js";import"./FeatureFilter-CZGWb4v1.js";import"./FeatureReductionLayer-DCl2zl7J.js";import"./FeatureReductionSelection-B6b-D11G.js";import"./jsonUtils-BCKNeL17.js";import"./typeUtils-HA9kMi7L.js";import"./ClassBreaksRenderer-ZZL7GgAC.js";import"./utils-DczMxsh3.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-BC8cCfv9.js";import"./OrderByInfo-CijLf-Rk.js";import"./RefreshableLayer-CjIMOkuB.js";import"./TemporalLayer-BMzjlo9V.js";import"./TimeInfo-iD1UOhx1.js";import"./FeatureSet-BGraDqhW.js";import"./popupUtils-ayqQpIwT.js";import"./utils-NtYZAcLN.js";import"./cimSymbolUtils-raYAw_M7.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./networkEnums-CIaSZyPw.js";import"./GPMessage-BGTftGpZ.js";var te;(function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absolute-value"})(te||(te={}));let M=class extends it(at(nt(et(Oe)))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(Y.ofType(ee)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new ve({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(Y.ofType(ee)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e==null?void 0:e.initializationInclusionModeDefinition,(e==null?void 0:e.dataPreloadedInLocalCache)&&!(e!=null&&e.initializationInclusionModeDefinition))throw new ne("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(ze(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),Ge))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:i,dataPreloadedInLocalCache:n,initializationLinkChartConfig:a}=e;return{url:t,title:i,dataPreloadedInLocalCache:n,initializationLinkChartConfig:a}}_initializeLayerProperties(e){var r,s,h,g;if(!this.title&&this.url){const d=this.url.split("/");this.title=d[d.length-2]}const t=new Set;let i=[],n=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new ne("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");(r=e.inclusionModeDefinition)!=null&&r.generateAllSublayers?(i=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]):(s=e.inclusionModeDefinition)!=null&&s.namedTypeDefinitions&&((h=e.inclusionModeDefinition)==null?void 0:h.namedTypeDefinitions.size)>0?(g=e.inclusionModeDefinition)==null||g.namedTypeDefinitions.forEach((d,y)=>{var E,N;const f=this._graphTypeLookup.get(y);if(!f)return G.getLogger(this).warn(`A named type, ${y}, was in the inclusion list that wasn't in the data model and will be removed`),void((E=e.inclusionModeDefinition)==null?void 0:E.namedTypeDefinitions.delete(y));f.type==="relationship"?t.has(y)||(t.add(y),n.push(f)):f.type==="entity"?t.has(y)||(t.add(y),i.push(f)):(G.getLogger(this).warn(`A named type, ${y}, was in the inclusion list that wasn't properly modeled and will be removed`),(N=e.inclusionModeDefinition)==null||N.namedTypeDefinitions.delete(y))}):(i=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]);const a=new Ue({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=i,this.memberRelationshipTypes=n,this.dataManager=a}load(e){const t=async()=>{var a;const i=[],n=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await xe(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),(a=this.dataManager.inclusionModeDefinition)==null||a.namedTypeDefinitions.forEach(r=>{r.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(r=>{n.push(r.refreshCachedQueryEngine()),i.push(new Promise(s=>{r.on("layerview-create",()=>{s(null)})}))}),this.tables.forEach(r=>{n.push(r.refreshCachedQueryEngine())}),await Promise.all(n)};return this.addResolvingPromise(new Promise(i=>{rt(this.url).then(async n=>{var r,s,h,g,d,y,f,E,N,m;(r=n.dataModel.entityTypes)==null||r.forEach(w=>{w.name&&this._graphTypeLookup.set(w.name,w)}),(s=n.dataModel.relationshipTypes)==null||s.forEach(w=>{w.name&&this._graphTypeLookup.set(w.name,w)});const a=(h=this.linkChart)==null?void 0:h.linkChartProperties;if((a==null?void 0:a.originIdOf("entitiesUrl"))===Z.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await $e.fetchAndConvertSerializedLinkChart({entitiesUrl:a==null?void 0:a.entitiesUrl,relationshipsUrl:a==null?void 0:a.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(n.dataModel),this.initializationLinkChartConfig={layoutSettings:(a==null?void 0:a.layoutSettings)??void 0,layoutMode:je(a.layoutType)}),this._initializeLayerProperties({knowledgeGraph:n,inclusionModeDefinition:this._originalInclusionList}),(d=(g=this.dataManager.inclusionModeDefinition)==null?void 0:g.namedTypeDefinitions)!=null&&d.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},(y=this.dataManager.knowledgeGraph.dataModel.entityTypes)==null||y.forEach(w=>{var D;w.name&&((D=this.dataManager.inclusionModeDefinition)==null||D.namedTypeDefinitions.set(w.name,{useAllData:!0}))}),(f=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)==null||f.forEach(w=>{var D;w.name&&((D=this.dataManager.inclusionModeDefinition)==null||D.namedTypeDefinitions.set(w.name,{useAllData:!0}))})),this.dataPreloadedInLocalCache){const w=Qe.getInstance();for(const[D,O]of((E=this.dataManager.inclusionModeDefinition)==null?void 0:E.namedTypeDefinitions)??[])for(const b of((N=O.members)==null?void 0:N.values())??[]){const ae=w.readFromStoreById(`${D}__${b.id}`);ae&&q(this.dataManager.sublayerCaches,D,()=>new Map).set(b.id,ae)}await t()}else{const w=((m=this.initializationLinkChartConfig)==null?void 0:m.layoutMode)==="geographic-organic-standard";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,w,!0).then(async()=>{K(e),await t()}))}i(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("initializationInclusionModeDefinition",e):G.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let i=[];t!=null&&t.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await We(e,this.dataManager.knowledgeGraph));const n=e.concat(i).filter(a=>{var r;return!((r=this.sublayerIdsCache.get(a.typeName))!=null&&r.has(a.id))});n.length>0&&(this.membershipModified=!0),await this._handleNewRecords(n,t)}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1,overrideMembershipCheck:n=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){var s,h,g,d,y,f,E,N;let a=[];for(const m of e)(n||((g=(h=(s=this.dataManager.inclusionModeDefinition)==null?void 0:s.namedTypeDefinitions)==null?void 0:h.get(m.typeName))==null?void 0:g.useAllData)===!1&&((E=(f=(y=(d=this.dataManager.inclusionModeDefinition)==null?void 0:d.namedTypeDefinitions)==null?void 0:y.get(m.typeName))==null?void 0:f.members)!=null&&E.has(m.id)))&&a.push(m);if(t){const m=new Set,w=[];for(const D of a)if(this.dataManager.nodeConnectionsLookup.has(D.id))for(const O of this.dataManager.nodeConnectionsLookup.get(D.id))m.add(O);for(const D of m)if(this.dataManager.memberIdTypeLookup.has(D))for(const O of this.dataManager.memberIdTypeLookup.get(D))this.dataManager.relationshipTypeNames.has(O)&&w.push({id:D,typeName:O});a=a.concat(w)}this.dataManager.removeFromLayer(a);for(const m of a)(N=this.sublayerIdsCache.get(m.typeName))==null||N.delete(m.id),this.dataManager.relationshipTypeNames.has(m.typeName)?this.relationshipLinkChartDiagramLookup.delete(m.id):this.entityLinkChartDiagramLookup.delete(m.id);i&&await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings}),a.length>0&&(this.membershipModified=!0);const r=[];return this.layers.forEach(m=>{r.push(m.refreshCachedQueryEngine())}),await Promise.all(r),this._refreshNamedTypes(),a}async expand(e,t){let i=[];try{const n=await this.dataManager.getConnectedRecordIds(e,t==null?void 0:t.relationshipTypeNames,t);i=n.filter(a=>{var r;return!((r=this.sublayerIdsCache.get(a.typeName))!=null&&r.has(a.id))}),await this._handleNewRecords(n,t),n.length>0&&(this.membershipModified=!0),K(t==null?void 0:t.signal)}catch(n){throw me(n)&&i.length>0&&this.removeRecords(i,{overrideMembershipCheck:!0}),n}return{records:i}}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.originIdOf("layers")===Z.DEFAULTS?this._createSublayers(e,this.layers,n=>!!n.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===Z.DEFAULTS?this._createSublayers(e,this.tables,n=>!n.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((n,a)=>{var s;const r=q(this.sublayerIdsCache,a,()=>new Set);(s=n.members)==null||s.forEach(({id:h,linkChartLocation:g})=>{if(r.add(h),g){const d="coords"in g&&"lengths"in g?g:X(g);this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(h,d):this.entityLinkChartDiagramLookup.set(h,d)}})})}async calculateLinkChartLayout(e="organic-standard",t){var Le,we,Me,ke,Ce,Te,Ne;const i=[],n=[],a=[];this.dataManager.sublayerCaches.forEach((o,l)=>{this.dataManager.entityTypeNames.has(l)?o.forEach(c=>{i.push({typeName:l,feature:c})}):this.dataManager.relationshipTypeNames.has(l)&&o.forEach(c=>{n.push({typeName:l,feature:c})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const r=new Map,s=new Map,h=new Map,g=new Map,d=new Uint8Array(i.length),y=new Float64Array(i.length),f=new Float64Array(i.length),E=new Float64Array(i.length),N=new Float64Array(i.length),m=new Uint32Array(n.length),w=new Uint32Array(n.length),D=new Float64Array(n.length),O=new Float64Array(n.length),b=[],ae="organic-standard",z=new ve({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let W,ge="organic-standard",L=0,A=0;const Ee=He.apply;switch(ge=e==="geographic-organic-standard"?ae:e,ge){case"organic-standard":W=Xe.apply;break;case"organic-community":W=Ke.apply;break;case"hierarchical-bottom-to-top":W=Ze.apply;break;case"radial-root-centric":W=Je.apply;break;case"tree-left-to-right":W=qe.apply;break;default:W=Ve.apply}let le=!1;i.forEach(({typeName:o,feature:l})=>{var c,S,j,k,R;if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"&&((c=t==null?void 0:t.lockedNodeLocations)!=null&&c.has(l.attributes[I]))){e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(o)?d[L]=$.IsGeographic:d[L]=$.None;const p=t.lockedNodeLocations.get(l.attributes[I]);y[L]=p.x,f[L]=p.y}else if(e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(o)){d[L]=$.IsGeographic;let p=null;const C=l.attributes[this.dataManager.geographicLookup.get(o).name];switch((S=this.dataManager.geographicLookup.get(o))==null?void 0:S.geometryType){case"esriGeometryPoint":y[L]=C==null?void 0:C.x,f[L]=C==null?void 0:C.y;break;case"esriGeometryPolygon":p=C==null?void 0:C.centroid,(p==null?void 0:p.x)!=null&&(p==null?void 0:p.y)!=null?(y[L]=p.x,f[L]=p.y):d[L]=$.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":p=(j=C==null?void 0:C.extent)==null?void 0:j.center,(p==null?void 0:p.x)!=null&&(p==null?void 0:p.y)!=null?(y[L]=p.x,f[L]=p.y):d[L]=$.IsMovable;break;default:d[L]=$.IsMovable}(y[L]==null||f[L]==null||Number.isNaN(y[L])||Number.isNaN(f[L]))&&(d[L]=$.IsMovable,y[L]=0,f[L]=0)}else if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){!le&&((k=t==null?void 0:t.lockedNodeLocations)!=null&&k.has(l.attributes[I]))&&(le=!0);const p=(R=t==null?void 0:t.timeInfoByTypeName)==null?void 0:R.get(o),C=p==null?void 0:p.startField,P=C&&(p!=null&&p.startField)?l.attributes[C]:null;E[L]=P?new Date(P).getTime():NaN;const B=p==null?void 0:p.endField,U=B&&(p!=null&&p.endField)?l.attributes[B]:null;N[L]=U?new Date(U).getTime():NaN,y[L]=0,f[L]=0,d[L]=$.IsMovable}else d[L]=$.IsMovable,y[L]=0,f[L]=0;g.set(l.attributes[I],L),b[L]={feature:l,typeName:o},L++}),le&&G.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let fe=!1;const he=new Map;n.forEach(o=>{var B;const l=o.feature.attributes[re],c=o.feature.attributes[se],S=g.get(l),j=g.get(c),k=(B=t==null?void 0:t.timeInfoByTypeName)==null?void 0:B.get(o.typeName),R=t!=null&&t.timeInfoByTypeName?k==null?void 0:k.startField:null,p=R?o.feature.attributes[R]:null,C=k==null?void 0:k.endField,P=C?o.feature.attributes[C]:null;if(S!==void 0&&j!==void 0){let U=l+"-"+c;e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(U=U+"-"+p+"-"+P);const H=he.get(U);(H==null?void 0:H.has(o.typeName))||(m[A]=S,w[A]=j,e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(D[A]=p?new Date(p).getTime():NaN,O[A]=P?new Date(P).getTime():NaN),H===void 0?he.set(U,new Map([[o.typeName,A]])):H.set(o.typeName,A),A++),a.push(o)}else fe=!0,this.relationshipLinkChartDiagramLookup.set(l,null)}),fe&&G.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const _e=this._validateOrganicLayoutSettings(e,(Le=t==null?void 0:t.layoutSettings)==null?void 0:Le.organicLayoutSettings),de=this._convertValidatedOrganicSettingsToCalculationSettings(_e);await Ye();let J=oe.Error,_=null;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){let o;({status:J,links:_,graphics:o}=Ee(()=>{var l;return((l=t==null?void 0:t.signal)==null?void 0:l.aborted)??!1},d,y,f,E,N,m.subarray(0,A),w.subarray(0,A),D.subarray(0,A),O.subarray(0,A),e==="chronological-multi-timeline",(we=t==null?void 0:t.layoutSettings)==null?void 0:we.chronologicalLayoutSettings)),J===oe.Success&&(this.chronologicalAuxiliaryGraphics=o)}else({status:J,links:_}=W(()=>{var o;return((o=t==null?void 0:t.signal)==null?void 0:o.aborted)??!1},d,y,f,m.subarray(0,A),w.subarray(0,A),de.computationBudgetTime,de.idealEdgeLengthMultiplier,de.repulsionRadiusMultiplier));if(K(t==null?void 0:t.signal),J===oe.Error)throw new ne("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(J===oe.Canceled)throw Pe();for(let o=0;o<b.length;o++){if(f[o]>84.9999?f[o]=84.9999:f[o]<-84.9999&&(f[o]=-84.9999),y[o]>179.9999?y[o]=179.9999:y[o]<-179.9999&&(y[o]=-179.9999),b[o].feature.attributes[x]=new ye(y[o],f[o]),r.has(b[o].typeName)){const S=r.get(b[o].typeName);S==null||S.set(b[o].feature.attributes[I],b[o].feature)}else{const S=new Map;S.set(b[o].feature.attributes[I],b[o].feature),r.set(b[o].typeName,S)}h.set(b[o].feature.attributes[I],b[o].feature);const l=X(b[o].feature.attributes[x]);this.entityLinkChartDiagramLookup.set(b[o].feature.attributes[I],b[o].feature.attributes[x]?l:null);const c=q(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,b[o].typeName,()=>({useAllData:!1,members:new Map}));q(c.members,b[o].feature.attributes[I],()=>({id:b[o].feature.attributes[I],linkChartLocation:void 0})).linkChartLocation=b[o].feature.attributes[x],b[o].feature.attributes[x].x<z.xmin&&(z.xmin=b[o].feature.attributes[x].x),b[o].feature.attributes[x].x>z.xmax&&(z.xmax=b[o].feature.attributes[x].x),b[o].feature.attributes[x].y<z.ymin&&(z.ymin=b[o].feature.attributes[x].y),b[o].feature.attributes[x].y>z.ymax&&(z.ymax=b[o].feature.attributes[x].y)}if(this.linkChartExtent.xmin=z.xmin,this.linkChartExtent.xmax=z.xmax,this.linkChartExtent.ymin=z.ymin,this.linkChartExtent.ymax=z.ymax,!_)throw new ne("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const ie=new Map,pe=new Map,ue=new Map,be=new Set;for(let o=0;o<a.length;o++){const l=[],c=a[o],S=c.feature.attributes[re],j=c.feature.attributes[se];let k=S+"-"+j;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){const u=(Me=t==null?void 0:t.timeInfoByTypeName)==null?void 0:Me.get(c.typeName),F=t!=null&&t.timeInfoByTypeName?u==null?void 0:u.startField:null,Q=F?c.feature.attributes[F]:null,V=u==null?void 0:u.endField;k+="-"+Q+"-"+(V?c.feature.attributes[V]:null)}const R=he.get(k).get(c.typeName),p=R===0?0:_==null?void 0:_.vertexEndIndex[R-1];if(!be.has(R)){if(be.add(R),_.types[R]===Ie.Recursive){const u=[_.vertices[2*p],_.vertices[2*p+1]],F=[_.vertices[2*(p+1)],_.vertices[2*(p+1)+1]],Q=[.5*(u[0]+F[0]),.5*(u[1]+F[1])],V=[Q[0]-u[0],Q[1]-u[1]],Ae=[Q[0]+V[1],Q[1]-V[0]],Re=[Q[0]-V[1],Q[1]+V[0]];l.push(u),l.push(Ae),l.push(F),l.push(Re),l.push(u)}else{if(_.types[R]!==Ie.Regular){G.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let u=p;u<_.vertexEndIndex[R];u++)l.push([_.vertices[2*u],_.vertices[2*u+1]])}if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"){const u=(ke=b[g.get(S)])==null?void 0:ke.feature.attributes[x],F=(Ce=b[g.get(j)])==null?void 0:Ce.feature.attributes[x];l[0][0]===u.x&&l[0][1]===u.y||(l[0]=[u.x,u.y]),l[l.length-1][0]===F.x&&l[l.length-1][1]===F.y||(l[l.length-1]=[F.x,F.y])}for(let u=1;u<l.length-1;u++)l[u][1]>85.5?l[u][1]=85.5:l[u][1]<-85.5&&(l[u][1]=-85.5),l[u][0]>179.9999?l[u][0]=179.9999:l[u][0]<-179.9999&&(l[u][0]=-179.9999);ie.has(k)?ie.get(k).push(l):ie.set(k,[l])}const C=ie.get(k);pe.has(k)||(pe.set(k,new Map),ue.set(k,new Map));const P=pe.get(k),B=ue.get(k);P.has(c.typeName)||(P.set(c.typeName,C.shift()),B.set(c.typeName,0));const U=P.get(c.typeName);B.set(c.typeName,B.get(c.typeName)+1);const H=new De({paths:[U]});if(c.feature.attributes[x]=H,s.has(c.typeName)){const u=s.get(c.typeName);u==null||u.set(c.feature.attributes[I],c.feature)}else{const u=new Map;u.set(c.feature.attributes[I],c.feature),s.set(c.typeName,u)}h.set(c.feature.attributes[I],c.feature);const ce=X(c.feature.attributes[x]);this.relationshipLinkChartDiagramLookup.set(c.feature.attributes[I],c.feature.attributes[x]?ce:null);const Se=q(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,c.typeName,()=>({useAllData:!1,members:new Map}));q(Se.members,c.feature.attributes[I],()=>({id:c.feature.attributes[I],linkChartLocation:void 0})).linkChartLocation=ce}for(const o of a)o.feature.attributes[tt]=((Te=ue.get(o.feature.attributes[re]+"-"+o.feature.attributes[se]))==null?void 0:Te.get(o.typeName))??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:(Ne=t==null?void 0:t.layoutSettings)==null?void 0:Ne.clone()},{nodes:r,links:s,idMap:h}}async applyNewLinkChartLayout(e="organic-standard",t){const i=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(n=>{i.push(n.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){var t,i;const e=new Map;for(const[n,a]of((t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions.entries())??[])this.dataManager.relationshipTypeNames.has(n)||((i=a==null?void 0:a.members)==null||i.forEach(r=>{const s=r.linkChartLocation;let h;const g=r.id;s&&(h="x"in s?{x:s.x,y:s.y}:{x:s.coords[0],y:s.coords[1]},e.set(g,new ye({x:h.x,y:h.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(i=>{t.push(i.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let n=[];for(const a of this.dataManager.relationshipTypeNames){const r=this.sublayerIdsCache.get(a);r&&(n=n.concat(Array.from(r.keys())))}i=await this.dataManager.getRelationshipsBetweenNodes(e,n,t),await this._handleNewRecords(i,t),K(t)}catch(n){throw me(n)&&this.removeRecords(i),n}return{records:i}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let n=[];for(const r of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(r);s&&(n=n.concat(Array.from(s.keys())))}let a=[];for(const r of this.dataManager.entityTypeNames){const s=this.sublayerIdsCache.get(r);s&&(a=a.concat(Array.from(s)))}i=await this.dataManager.getRelationshipsFromNodes(e,a,n,t),await this._handleNewRecords(i,t),i.length>0&&(this.membershipModified=!0),K(t)}catch(n){throw me(n)&&this.removeRecords(i),n}return{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){var n;const i=new Map;this.layers.forEach(a=>{i.set(a.objectType.name,a.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:i,...t}),(n=this.linkChart)==null||n.handleChronologicalOverlay()}async _handleNewRecords(e,t){const i=[];this.dataManager.addToLayer(e);for(const a of e)this.sublayerIdsCache.has(a.typeName)||(this.sublayerIdsCache.set(a.typeName,new Set),i.push(a.typeName)),this.sublayerIdsCache.get(a.typeName).add(a.id);for(const a of i){const r=this._graphTypeLookup.get(a);if(r){const s=this._createSublayer(r);r.type==="entity"?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a),s.geometryType?this.layers.push(s):this.tables.push(s),this.dataManager.sublayerCaches.set(a,new Map)}}await xe(this,i,t),await this.dataManager.refreshCacheContent(e.map(a=>a.id),void 0,void 0,void 0,t);const n={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[a,r]of this.entityLinkChartDiagramLookup.entries())r&&n.lockedNodeLocations.set(a,new ye(r.coords[0],r.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,n)}_createSublayers(e,t,i){e.forEach(n=>{const a=this._createSublayer(n);i(a)&&t.push(a),this._updateSublayerCaches(n)})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const n=e.find(a=>a.type===i.graphType&&a.name===i.graphTypeName);n&&(i.objectType=n,i.read({title:n.name},{origin:"service"}),this._updateSublayerCaches(n))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=Z.PORTAL_ITEM&&e<Z.USER}async _initializeDiagram(){var e,t;this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?((t=(e=this.dataManager.inclusionModeDefinition)==null?void 0:e.namedTypeDefinitions)==null||t.forEach((i,n)=>{var a;(a=i==null?void 0:i.members)==null||a.forEach(r=>{const s=r.linkChartLocation;let h;const g=r.id;if(!s)return;h="x"in s?{x:s.x,y:s.y}:{x:s.coords[0],y:s.coords[1]};const d=X(h);this.dataManager.relationshipTypeNames.has(n)?this.relationshipLinkChartDiagramLookup.set(g,d):this.entityLinkChartDiagramLookup.set(g,d),this.linkChartExtent.xmin>h.x&&(this.linkChartExtent.xmin=h.x),this.linkChartExtent.xmax<h.x&&(this.linkChartExtent.xmax=h.x),this.linkChartExtent.ymin>h.y&&(this.linkChartExtent.ymin=h.y),this.linkChartExtent.ymax<h.y&&(this.linkChartExtent.ymax=h.y)})}),this.memberRelationshipTypes.forEach(i=>{var n;i.name&&((n=this.dataManager.sublayerCaches.get(i.name))==null||n.forEach(a=>{const r=this.relationshipLinkChartDiagramLookup.get(a.attributes[re]),s=this.relationshipLinkChartDiagramLookup.get(a.attributes[se]);if(r&&s){const h=X(new De({paths:[[[r.coords[0],r.coords[1]],[s.coords[0],s.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(a.attributes[I],h)}else this.relationshipLinkChartDiagramLookup.set(a.attributes[I],null)}))})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const i=m=>typeof m=="number"&&!isNaN(m),n=m=>i(m)&&m>=1,a=m=>i(m)&&m>=1,r=m=>Object.values(te).includes(m),s=m=>i(m)&&m>=0,h={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return h;const{computationBudgetTime:g,autoRepulsionRadius:d,repulsionRadiusMultiplier:y,absoluteIdealEdgeLength:f,multiplicativeIdealEdgeLength:E,idealEdgeLengthType:N}=t;return a(g)?h.computationBudgetTime=g:g&&G.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),h.autoRepulsionRadius=d,!d&&n(y)?h.repulsionRadiusMultiplier=y:d||(h.autoRepulsionRadius=!0,G.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),e==="geographic-organic-standard"&&(r(N)?h.idealEdgeLengthType=N:N!==void 0&&G.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),N==="absolute-value"&&s(f)?h.absoluteIdealEdgeLength=f:N==="absolute-value"&&f!==void 0?G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):N==="multiplier"&&s(E)?h.multiplicativeIdealEdgeLength=E:N==="multiplier"&&E!==void 0&&G.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),h}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===te.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===te.ABSOLUTE&&(t===void 0?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new ee({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){var a;const t=new Set((e.entityTypes??[]).map(r=>r.name).concat((e.relationshipTypes??[]).map(r=>r.name))),i=new Set((e.entityTypes??[]).map(r=>r.name)),n=new Set((e.relationshipTypes??[]).map(r=>r.name));if(this.layers){for(const s of this.layers)!s.graphType&&t.has(s.graphTypeName)&&(s.graphType=i.has(s.graphTypeName)?"entity":"relationship");const r=this.layers.filter(s=>t.has(s.graphTypeName)&&(s.graphType==="entity"?i.has(s.graphTypeName):n.has(s.graphTypeName)));this.setAtOrigin("layers",r,Fe(this.originIdOf("layers")))}else this.layers=new Y;if(this.layers&&this._originalInclusionList){const r=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),s=((a=this.tables)==null?void 0:a.map(d=>d.graphTypeName))??[],h=this.layers.map(d=>d.graphTypeName).concat(s);for(const d of h)r.has(d)||this._originalInclusionList.namedTypeDefinitions.set(d,{useAllData:!1,members:new Map});const g=[];for(const d of this._originalInclusionList.namedTypeDefinitions.keys())h.includes(d)||(G.getLogger(this).warn(`A named type, ${d}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),g.push(d));for(const d of g)this._originalInclusionList.namedTypeDefinitions.delete(d)}}};T([v(ot)],M.prototype,"url",void 0),T([v()],M.prototype,"dataPreloadedInLocalCache",void 0),T([v()],M.prototype,"initializationLinkChartConfig",void 0),T([v()],M.prototype,"membershipModified",void 0),T([v()],M.prototype,"dataManager",void 0),T([v()],M.prototype,"initializationInclusionModeDefinition",null),T([v()],M.prototype,"knowledgeGraph",void 0),T([v({type:Y.ofType(ee),json:{write:{ignoreOrigin:!0}}})],M.prototype,"layers",void 0),T([v({readOnly:!0})],M.prototype,"linkChart",null),T([v()],M.prototype,"entityLinkChartDiagramLookup",void 0),T([v()],M.prototype,"relationshipLinkChartDiagramLookup",void 0),T([v()],M.prototype,"linkChartExtent",void 0),T([v()],M.prototype,"memberEntityTypes",void 0),T([v()],M.prototype,"memberRelationshipTypes",void 0),T([v({type:["LinkChartLayer"]})],M.prototype,"operationalLayerType",void 0),T([v()],M.prototype,"sublayerIdsCache",void 0),T([v({type:Y.ofType(ee),json:{write:{ignoreOrigin:!0}}})],M.prototype,"tables",void 0),T([v({json:{read:!1}})],M.prototype,"type",void 0),T([v({json:{read:!1}})],M.prototype,"chronologicalAuxiliaryGraphics",void 0),M=T([Be("esri.layers.LinkChartLayer")],M);const Ba=M;export{Ba as default};
