const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-CVo442fO.js","assets/index-BK4NQ6A4.js","assets/index-CrYBktwj.css","assets/MultiOriginJSONSupport-DUKBa-dg.js","assets/LRUCache-CL5msEC4.js","assets/MemCache-CyQuOB2V.js","assets/BlendLayer-NAOeIBrJ.js","assets/layerContainerType-C5CzMsLd.js","assets/jsonUtils-D0HXYIFK.js","assets/parser-WlfHVMKt.js","assets/ScaleRangeLayer-DdjRLhTq.js","assets/commonProperties-DHonAk3K.js","assets/ElevationInfo-ukDqzj81.js","assets/lengthUtils-vAKwy5vA.js","assets/OrderByInfo-BQl4U9ch.js","assets/utils-ClNWe8-c.js","assets/ClassBreaksDefinition-IZinr1gY.js","assets/FeatureLayerBase-CfR2PUPc.js","assets/labelingInfo-CMtV5asE.js","assets/SimpleRenderer-CTg8-SHi.js","assets/commonProperties-tN8tMOkk.js","assets/colorRamps-Bul-GLuH.js","assets/ColorStop-6JLJSjyr.js","assets/visualVariableUtils-Bkv6x7jd.js","assets/jsonUtils-Cf285y-V.js","assets/defaults-CPpodd5l.js","assets/defaultsJSON-GKolV7NZ.js","assets/UniqueValueRenderer-Bu6pPUXK.js","assets/defaultCIMValues-Jn-4TiJa.js","assets/enums-BQDXKJnw.js","assets/RendererLegendOptions-Y_shaKng.js","assets/styleUtils-2TcuKJL1.js","assets/NormalizationBinParametersMixin-B4WGgBsH.js","assets/labelUtils-D2lVPNI1.js","assets/LayerFloorInfo-D1i2SxIl.js","assets/Relationship-CsXP5zaM.js","assets/serviceCapabilitiesUtils-BmGyqoWH.js","assets/infoFor3D-dHKPbXlj.js","assets/FeatureEffectLayer-CTeaCs-D.js","assets/FeatureEffect-CXD503XX.js","assets/FeatureFilter-CuYyNEic.js","assets/typeUtils-i1KFya8B.js","assets/ClassBreaksRenderer-1LxhKfb2.js","assets/FieldsIndex-CWtJiWAB.js","assets/utils-H4N3M7z_.js","assets/heatmapUtils-6IWAjZwG.js","assets/vec42-gX_7tK6K.js","assets/vec4f64-o2zAXfmz.js","assets/popupUtils-DG5m4f7U.js","assets/FeatureLayerSource-C-CGKiMA.js","assets/MeshLocalVertexSpace-Bvcok8qz.js","assets/meshVertexSpaceUtils-BjNX8xzr.js","assets/External-DETZmJk2.js","assets/MeshTransform-Ye2AiZBe.js","assets/mat4f64-Dk4dwAN8.js","assets/quat-Cf4NJlZM.js","assets/mat3f64-q3fE-ZOt.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-Dg_9b_1y.js","assets/editingSupport-DOExGxno.js","assets/EditBusLayer-Dv8B62Dq.js","assets/clientSideDefaults-C6zaXscP.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/QueryTask-0pfaqlFF.js","assets/executeForIds-D0lkuBmk.js","assets/query-B1hhPvrT.js","assets/pbfQueryUtils-D8MMr7f-.js","assets/pbf-DbTPZ4KN.js","assets/memoryEstimations-Dnq1bqq3.js","assets/OptimizedFeature-zQ3eDxBg.js","assets/OptimizedFeatureSet-Blu9Ckm7.js","assets/queryZScale-BIqYmUxy.js","assets/executeQueryJSON-DdsC84o-.js","assets/FeatureSet-wkW4giZ3.js","assets/featureConversionUtils-DaTkq0aa.js","assets/editsZScale-DJDFG_gt.js","assets/APIKeyMixin-BY_qWE2G.js","assets/ArcGISService-DgY4yFJj.js","assets/CustomParametersMixin-BV_eMTQG.js","assets/DisplayFilteredLayer-C0XuPsuj.js","assets/scaleUtils-3I7-wBkj.js","assets/displayFilterUtils-CYar5vVX.js","assets/OperationalLayer-BXC_y2ag.js","assets/OrderedLayer-Do-ndBBk.js","assets/PortalLayer-Bfb4Yz4i.js","assets/portalItemUtils-BTEuB0Mh.js","assets/RefreshableLayer-gUs4Io41.js","assets/TemporalLayer-B8SUIK5z.js","assets/TimeInfo-DtF-7jVh.js","assets/FeatureType-CgxiyON3.js","assets/FeatureTemplate-BLZ_PzB-.js","assets/fieldProperties-ZfJwaP_e.js","assets/versionUtils-BBcw9cEh.js","assets/FeatureLayer-DuRFqNm9.js","assets/FeatureReductionLayer-Cq_IbCLa.js","assets/FeatureReductionSelection-0aAf2J2H.js","assets/jsonUtils-883n0g_l.js","assets/MD5-C9MwAd2G.js","assets/TrackableLayer-BcpCN3yj.js","assets/TitleCreator-BXk4GBxC.js","assets/styleUtils-Cyz4RLww.js","assets/interfaces-CL2NbQte.js","assets/OrientedImageryLayer-su0UVqOn.js"])))=>i.map(i=>d[i]);
import{d as m,G as B,s as u,ey as K,fp as V,_ as P,fq as z}from"./index-BK4NQ6A4.js";import{i as w}from"./originUtils-D69mHv66.js";import{P as j,w as O,d as q,v as H,$ as Q,p as x,f as W,I as N,m as E}from"./utils-CEPdDB5t.js";import{a as X,i as Z}from"./fetchService-DMAyMcXN.js";import{o as ee}from"./jsonContext-BffJQdvX.js";import{l as g,u as f,a as ae,E as y}from"./portalItemUtils-BTEuB0Mh.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./saveUtils-BYlmVGKO.js";const v="Feature Service",T="feature-layer-utils",te=`${T}-save`,re=`${T}-save-as`,p=`${T}-saveall`,d=`${T}-saveall-as`;function $(e){return{isValid:z(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(e,a){const t=ee(e,"portal-item");return a!=null&&a.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=b(e),t=b(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)r.isTable?t.push(o):a.push(o);return{layers:a,tables:t}}function J(e){return D([e])}async function G(e,a){return/\/\d+\/?$/.test(e.url)?J(a[0]):U(a,e)}async function U(e,a){if(e.reverse(),!a)return D(e);const t=await se(a,e);for(const r of e)F(r.layer,r.layerJSON,t);return le(t,e),t}async function se(e,a){let t=await e.fetchData("json");if(ne(t))return t;t||(t={}),oe(t);const{layer:{url:r,customParameters:o,apiKey:s}}=a[0];return await ie(t,{url:r??"",customParameters:o,apiKey:s},a.map(n=>n.layer.layerId)),t}function ne(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function oe(e){e.layers||(e.layers=[]),e.tables||(e.tables=[])}function le(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}L(e.layers,t),L(e.tables,r)}function L(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);K(t.sort(S),a.slice().sort(S))&&e.sort((r,o)=>{const s=a.indexOf(r.id),n=a.indexOf(o.id);return s<n?-1:s>n?1:0})}function S(e,a){return e<a?-1:e>a?1:0}async function ie(e,a,t){const{url:r,customParameters:o,apiKey:s}=a,{serviceJSON:n,layersJSON:l}=await X(r,{customParameters:o,apiKey:s}),i=_(e.layers,n.layers,t),c=_(e.tables,n.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],k=l?[...l.layers,...l.tables]:[];await ce(e,h,r,k)}function _(e,a,t){const r=V(e,a,(s,n)=>s.id===n.id);e=e.filter(s=>!r.removed.some(n=>n.id===s.id));const o=r.added;return o.forEach(({id:s})=>{e.push({id:s})}),{itemResources:e,added:o.filter(({id:s})=>!t.includes(s))}}async function ce(e,a,t,r){const o=await ue(a),s=a.map(({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find(({id:i})=>i===n)}));await Promise.allSettled(s.map(n=>n.load())),s.forEach(n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};n.operationalLayerType!=="ArcGISFeatureLayer"&&(h.layerType=n.operationalLayerType),F(n,h,e)})}async function ue(e){const a=[];e.forEach(({type:o})=>{switch(Z(o)){case"CatalogLayer":a.push(P(()=>import("./CatalogLayer-CVo442fO.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92])).then(s=>s.default));break;case"FeatureLayer":a.push(P(()=>import("./FeatureLayer-DuRFqNm9.js"),__vite__mapDeps([93,1,2,3,7,17,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,75,71,73,76,77,6,8,9,78,79,80,81,60,38,39,40,94,95,96,41,42,4,5,43,44,45,46,47,97,82,83,14,84,85,86,10,87,88,98,90,89,91,99,92,100,48,101])).then(s=>s.default));break;case"OrientedImageryLayer":a.push(P(()=>import("./OrientedImageryLayer-su0UVqOn.js"),__vite__mapDeps([102,1,2,93,3,7,17,11,12,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,75,71,73,76,77,6,8,9,78,79,80,81,60,38,39,40,94,95,96,41,42,4,5,43,44,45,46,47,97,82,83,14,84,85,86,10,87,88,98,90,89,91,99,92,100,48,101])).then(s=>s.default))}});const t=await Promise.all(a),r=new Map;return e.forEach(({type:o},s)=>{r.set(o,t[s])}),r}function F(e,a,t){e.isTable?A(t.tables,a):A(t.layers,a)}function A(e,a){const t=e.findIndex(({id:r})=>r===a.id);t===-1?e.push(a):e[t]=a}function M(e,a){if(!e.length)throw new u(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function ye(e,a){const t=e.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new u(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function Y(e,a){const t=e.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new u(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function fe(e){M(e,p),await Promise.all(e.map(a=>a.load()));for(const a of e)x(a,p,$),W({layer:a,itemType:v,errorNamePrefix:p});ye(e,p),Y(e,p)}function I(e,a){let t=0,r=0,o=0;for(const{layerType:s}of[...a.layers,...a.tables])switch(s){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(e,y.ORIENTED_IMAGERY_LAYER,t>0),f(e,y.SUBTYPE_GROUP_LAYER,r>0),f(e,y.SUBTYPE_GROUP_TABLE,o>0)}function C(e,a,t){ae(a,y.METADATA),f(a,y.MULTI_LAYER,e.length>1),f(a,y.SINGLE_LAYER,e.length===1),f(a,y.TABLE,t.tables.length>0&&t.layers.length===0),I(a,t)}async function pe(e,a,t){I(a,t)}async function de(e,a,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=e,i=m(r);a.url=((i==null?void 0:i.serverType)==="FeatureServer"?r:`${r}/${o}`)??null,a.title||(a.title=s),a.extent=null,l||n==null||(a.extent=await g(n)),C([e],a,t)}function me(e,a){for(const s of e){const n=s.parsedUrl.path,l=m(n);if(!(l==null?void 0:l.url.path))throw new u(`${a}:invalid-parameters`,E(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l==null?void 0:l.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new u(`${a}:invalid-parameters`,E(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&e.length>1)throw new u(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(e[0].parsedUrl.path),r=t==null?void 0:t.url.path;if(!e.every(s=>{const n=m(s.parsedUrl.path);return(n==null?void 0:n.url.path)===r}))throw new u(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function he(e){M(e,d),await Promise.all(e.map(a=>a.load()));for(const a of e)x(a,d,$);me(e,d),Y(e,d)}function we(e,a){I(e,a),N(e)}async function be(e,a,t){let r=0;for(const{isTable:n}of e)n||r++;const o=e[0].parsedUrl.path,s=m(o);if(a.url=(s==null?void 0:s.serverType)==="FeatureServer"?s.url.path:o,a.title||(a.title=s.title),a.extent=null,r>0){const n=e.map(l=>l.fullExtent).filter(B).reduce((l,i)=>l.clone().union(i));n&&(a.extent=await g(n))}C(e,a,t),N(a)}async function _e(e,a){return j({layer:e,itemType:v,validateLayer:$,createJSONContext:t=>b(t,e),createItemData:(t,r)=>G(r,[t]),errorNamePrefix:te,setItemProperties:pe},a)}async function Ae(e,a){await fe(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map(n=>O(n,n.isTable?r.forTables:r.forLayers,a))),s=await G(t,e.map((n,l)=>({layer:n,layerJSON:o[l]})));return we(t,s),await t.update({data:s}),await Promise.all(e.slice(1).map(n=>n.portalItem.reload())),w(r.forLayers),w(r.forTables),t.clone()}async function Oe(e,a,t){return Q({layer:e,itemType:v,validateLayer:$,createJSONContext:r=>b(r,e),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:re,newItem:a,setItemProperties:de},t)}async function xe(e,a,t){await he(e);const r=q({itemType:v,errorNamePrefix:d,newItem:a}),o=R(r),s=await Promise.all(e.map(l=>O(l,l.isTable?o.forTables:o.forLayers,t))),n=await U(e.map((l,i)=>({layer:l,layerJSON:s[i]})));await be(e,r,n),await H(r,n,t);for(const l of e)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{_e as save,Ae as saveAll,xe as saveAllAs,Oe as saveAs};
