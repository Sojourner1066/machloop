import{s as I,dE as M,dF as A,ah as Z,ai as C,dD as v,dG as b,aK as Q}from"./index-BnvXCOal.js";import{n as O,r as k,o as B}from"./featureConversionUtils-CmFMXzn8.js";import{t as P,n as $}from"./objectIdUtils-4dd1rf9p.js";import{u as G}from"./executeQueryForSnapping-liJQ_Q3r.js";import{f as L}from"./FeatureStore-3F4g1OWe.js";import{x as E,j as _}from"./queryUtils-BbXXCFfE.js";import{L as W}from"./QueryEngine-BzlhqoCr.js";import{a as z,l as U,u as H}from"./clientSideDefaults-BWGkYSyZ.js";import{S as N,E as J,p as g,g as T,f as j,h as D}from"./sourceUtils-DbXHQn1b.js";import{Z as w}from"./FieldsIndex-BUP-kEKc.js";import"./OptimizedFeature-C6mq9JTm.js";import"./memoryEstimations-CgKxTfPy.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CCVo9mx-.js";import"./BoundsStore-BNTaLKxL.js";import"./PooledRBush-CPIS6Hd_.js";import"./optimizedFeatureQueryEngineAdapter-GcjfMA_3.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-Dgrdb1iY.js";import"./LRUCache-CVkPrTgN.js";import"./MemCache-C-Nfx2no.js";import"./WhereClause-DxC4tFtf.js";import"./TimeOnly-CK6o1IbC.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./quantizationUtils-BIxUeD3r.js";import"./utils-BrCcQfny.js";import"./heatmapUtils-CtONkQbG.js";import"./vec42-r_rjmetX.js";import"./vec4f64-o2zAXfmz.js";import"./utils-BRTuCz6Z.js";import"./utils-B_zU764D.js";import"./ClassBreaksDefinition-BpDSQ-DZ.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-DGm8_bSu.js";import"./NormalizationBinParametersMixin-DSi88dGc.js";import"./defaultsJSON-GKolV7NZ.js";import"./date-Ctp1FiBW.js";const K=v,V={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:v},X={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0},queryBinsCapabilities:N};function Y(h){return Q(h)?h.z!=null:!!h.hasZ}function ee(h){return Q(h)?h.m!=null:!!h.hasM}class ke{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:a}=e,s=this._inferLayerProperties(a,e.fields),l=e.fields||[],d=e.hasM!=null?e.hasM:!!s.hasM,c=e.hasZ!=null?e.hasZ:!!s.hasZ,p=!e.spatialReference&&!s.spatialReference,u=p?K:e.spatialReference||s.spatialReference,y=p?V:null,m=e.geometryType||s.geometryType,o=!m;let t=e.objectIdField||s.objectIdField,n=e.timeInfo;const f=new w(l);if(!o&&(p&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!m))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(s.objectIdField&&t!==s.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${s.objectIdField}", found in the provided fields`}),t=s.objectIdField),t&&!s.objectIdField){const r=f.get(t);r?(t=r.name,r.type="esriFieldTypeOID",r.editable=!1,r.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const r of l){if(r.name==null&&(r.name=r.alias),r.alias==null&&(r.alias=r.name),!r.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:r});if(r.name===t&&(r.type="esriFieldTypeOID"),!M.jsonValues.includes(r.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${r.name}"`,{field:r});r.length==null&&(r.length=A(r))}const F={};for(const r of l)if(r.type!=="esriFieldTypeOID"&&r.type!=="esriFieldTypeGlobalID"){const q=Z(r);q!==void 0&&(F[r.name]=q)}if(n){if(n.startTimeField){const r=f.get(n.startTimeField);r?(n.startTimeField=r.name,r.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const r=f.get(n.endTimeField);r?(n.endTimeField=r.name,r.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const r=f.get(n.trackIdField);r?n.trackIdField=r.name:(n.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const x=f.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??C}:null;this._createDefaultAttributes=z(F,t);const R={warnings:i,featureErrors:[],layerDefinition:{...X,drawingInfo:H(m),templates:U(F),extent:y,geometryType:m,objectIdField:t,fields:l,hasZ:c,hasM:d,timeInfo:n,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new W({fieldsIndex:w.fromLayerJSON({fields:l,timeInfo:n,dateFieldsTimeReference:x}),geometryType:m,hasM:d,hasZ:c,objectIdField:t,spatialReference:u,featureStore:new L({geometryType:m,hasM:d,hasZ:c}),timeInfo:n}),!(a!=null&&a.length))return this._nextObjectId=P,R;const S=$(t,a);return this._nextObjectId=S+1,await E(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:i,geometryType:a}=this._queryEngine;return await Promise.all([J(i,a),E(e.adds,i),E(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return G(this._queryEngine,e,i.signal)}queryAttributeBins(e,i={}){return this._queryEngine.executeAttributeBinsQuery(e,i.signal)}_inferLayerProperties(e,i){let a,s,l=null,d=null,c=null;for(const p of e){const u=p.geometry;if(u!=null&&(l||(l=b(u)),d||(d=u.spatialReference),a==null&&(a=Y(u)),s==null&&(s=ee(u)),l&&d&&a!=null&&s!=null))break}if(i&&i.length){let p=null;i.some(u=>{const y=u.type==="esriFieldTypeOID",m=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return p=u,y||m})&&(c=p.name)}return{geometryType:l,spatialReference:d,objectIdField:c,hasM:s,hasZ:a}}async _loadInitialFeatures(e,i){const{geometryType:a,hasM:s,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine,y=[];for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const n=this._createDefaultAttributes(),f=T(u,n,t.attributes,!0);f?e.featureErrors.push(f):(this._assignObjectId(n,t.attributes,!0),t.attributes=n,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(O([],y,a,l,s,d));const{fullExtent:m,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=m,o){const{start:t,end:n}=o;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}async _applyEdits(e){const{adds:i,updates:a,deletes:s}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i!=null&&i.length&&this._applyAddEdits(l,i),a!=null&&a.length&&this._applyUpdateEdits(l,a),s==null?void 0:s.length){for(const p of s)l.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,i){const{addResults:a}=e,{geometryType:s,hasM:l,hasZ:d,objectIdField:c,spatialReference:p,featureStore:u,fieldsIndex:y}=this._queryEngine,m=[];for(const o of i){if(o.geometry&&s!==b(o.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=T(y,t,o.attributes);if(n)a.push(n);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const f=o.attributes[c];e.uidToObjectId[o.uid]=f}if(o.geometry!=null){const f=o.geometry.spatialReference??p;o.geometry=_(D(o.geometry,f),f,p)}m.push(o),a.push(j(o.attributes[c]))}}u.addMany(O([],m,s,d,l,c))}_applyUpdateEdits({updateResults:e},i){const{geometryType:a,hasM:s,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine;for(const y of i){const{attributes:m,geometry:o}=y,t=m==null?void 0:m[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const n=k(p.getFeature(t),a,l,s);if(o!=null){if(a!==b(o)){e.push(g("Incorrect geometry type."));continue}const f=o.spatialReference??c;n.geometry=_(D(o,f),f,c)}if(m){const f=T(u,n.attributes,m);if(f){e.push(f);continue}}p.add(B(n,a,l,s,d)),e.push(j(t))}}_assignObjectId(e,i,a=!1){const s=this._queryEngine.objectIdField;a&&i&&isFinite(i[s])?e[s]=i[s]:e[s]=this._nextObjectId++}}export{ke as default};
