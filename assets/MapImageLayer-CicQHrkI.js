import{dB as $,fL as O,dC as P,fo as T,fd as L,fe as E,ff as M,fc as F,fq as R,fp as _,b8 as N,fA as v,cO as f,fM as j,f5 as q,P as g,b0 as J,c_ as U,fN as A,fO as V,s as x,cg as k,dD as z,a0 as a,a1 as o,fP as S,cd as B,fK as C,fn as D,a2 as K,fQ as Z}from"./index-BCSVvjKE.js";import{m as G,f as H,s as W}from"./SublayersOwner-BB1EC4nw.js";import{y as Q}from"./ExportImageParameters-B6eKvDoL.js";import{t as X}from"./imageBitmapUtils-Cdr6j11H.js";import{e as I}from"./sublayerUtils-WkQInJ6V.js";import"./QueryTask-H9CF1UnN.js";import"./executeForIds-Cmw0KFmp.js";import"./query-DA927wtq.js";import"./pbfQueryUtils-BzIyC_vF.js";import"./pbf-C8WmPobi.js";import"./memoryEstimations-B7_Jwj04.js";import"./OptimizedFeature-CAs8C_6w.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./executeQueryJSON-sBZ6A4nC.js";import"./featureConversionUtils-D8tC_IN5.js";import"./floorFilterUtils-DZ5C6FQv.js";let s=class extends $(O(P(G(H(T(L(E(M(F(R(_(z)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new Q({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(N).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const p=r.supportedImageFormatTypes;return p&&p.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,p,t){var m,y,b;if(!this.loaded||!e)return;const i=e.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray();let n=!1;const h=v(t.origin);if((m=this.capabilities)!=null&&m.operations.supportsExportMap&&((b=(y=this.capabilities)==null?void 0:y.exportMap)!=null&&b.supportsDynamicLayers)){if(h===f.PORTAL_ITEM){const l=this.createSublayersForOrigin("service").sublayers;n=I(i,l,f.SERVICE)}else if(h>f.PORTAL_ITEM){const l=this.createSublayersForOrigin("portal-item");n=I(i,l.sublayers,v(l.origin))}}const d=[],c={writeSublayerStructure:n,...t};let u=n||this.hasVisibleLayersForOrigin(h);i.forEach(l=>{const w=l.write({},c);d.push(w),u=u||l.originOf("visible")==="user"}),d.some(l=>Object.keys(l).length>1)&&(r.layers=d),u&&(r.visibleLayers=i.filter(l=>l.visible).map(l=>l.id))}createExportImageParameters(e,r,p,t){const i=(t==null?void 0:t.pixelRatio)||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=(t==null?void 0:t.floors)??null,this._exportImageParameters.scale=j({extent:e,width:r})*i;const n=this._exportImageParameters.toJSON(),h=!(t!=null&&t.rotation)||this.version<10.3?{}:{rotation:-t.rotation},d=e==null?void 0:e.spatialReference,c=q(d);n.dpi*=i;const u={};if(t!=null&&t.timeExtent){const{start:m,end:y}=t.timeExtent.toJSON();u.time=m&&y&&m===y?""+m:`${m??"null"},${y??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:c,imageSR:c,size:r+","+p,...n,...h,...u}}async fetchImage(e,r,p,t){const{data:i}=await this._fetchImage("image",e,r,p,t);return i}async fetchImageBitmap(e,r,p,t){const{data:i,url:n}=await this._fetchImage("blob",e,r,p,t);return X(i,n,t==null?void 0:t.signal)}async fetchRecomputedExtents(e={}){const r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:p}=await g(this.url,r),{extent:t,fullExtent:i,timeExtent:n}=p,h=t||i;return{fullExtent:h&&U.fromJSON(h),timeExtent:n&&J.fromJSON({start:n[0],end:n[1]})}}loadAll(){return A(this,e=>{e(this.allSublayers),e(this.subtables)})}serviceSupportsSpatialReference(e){return V(this,e)}async _fetchImage(e,r,p,t,i){var d,c,u;const n={responseType:e,signal:(i==null?void 0:i.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,p,t,i),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},h=this.parsedUrl.path+"/export";if(((d=n.query)==null?void 0:d.dynamicLayers)!=null&&!((u=(c=this.capabilities)==null?void 0:c.exportMap)!=null&&u.supportsDynamicLayers))throw new x("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:m}=await g(h,n);return{data:m,url:h}}catch(m){throw k(m)?m:new x("mapimagelayer:image-fetch-error",`Unable to load image: ${h}`,{error:m})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:p}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});p&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){var r;return!(e==null||!((r=this.sublayersSourceJSON[e])!=null&&r.visibleLayers))}};a([o(S("dateFieldsTimeReference"))],s.prototype,"dateFieldsTimeZone",void 0),a([o({type:Boolean})],s.prototype,"datesInUnknownTimezone",void 0),a([o()],s.prototype,"dpi",void 0),a([o()],s.prototype,"gdbVersion",void 0),a([o()],s.prototype,"imageFormat",void 0),a([B("imageFormat",["supportedImageFormatTypes"])],s.prototype,"readImageFormat",null),a([o({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],s.prototype,"imageMaxHeight",void 0),a([o({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],s.prototype,"imageMaxWidth",void 0),a([o()],s.prototype,"imageTransparency",void 0),a([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),a([o({json:{read:!1,write:!1}})],s.prototype,"labelsVisible",void 0),a([o({type:["ArcGISMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([o({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),a([o(S("preferredTimeReference"))],s.prototype,"preferredTimeZone",void 0),a([o()],s.prototype,"sourceJSON",void 0),a([o({json:{write:{ignoreOrigin:!0}}})],s.prototype,"sublayers",void 0),a([C("sublayers",{layers:{type:[W]},visibleLayers:{type:[Z]}})],s.prototype,"writeSublayers",null),a([o({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),a([o({json:{read:!1},readOnly:!0,value:"map-image"})],s.prototype,"type",void 0),a([o(D)],s.prototype,"url",void 0),s=a([K("esri.layers.MapImageLayer")],s);const ye=s;export{ye as default};
