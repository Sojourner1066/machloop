import{P as o,$ as c}from"./utils-yo73Ohhi.js";import{l as p,a as u,E as s,u as g}from"./portalItemUtils-GAU2GjqI.js";import"./index-BCOvYjsd.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./jsonContext-DwX1pODn.js";import"./saveUtils-u2Q-v0fg.js";const y="Image Service",v="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",I="imagery-tile-layer-save-as",l="WCS",T="wcs-layer-save",w="wcs-layer-save-as";function m(r){var t;if(r.type==="imagery"||r.type==="wcs")return{isValid:!0};const{raster:e}=r,a=(e==null?void 0:e.datasetFormat)==="Function"?(t=e.primaryRasters)==null?void 0:t.rasters[0]:e;return{isValid:(a==null?void 0:a.datasetFormat)==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function x(r,e){const{parsedUrl:a,title:t,fullExtent:i}=r;e.url=a.path,e.title||(e.title=t);try{e.extent=await p(i)}catch{e.extent=void 0}u(e,s.METADATA),g(e,s.TILED_IMAGERY,r.type==="imagery-tile")}async function S(r,e){const a=r.type==="imagery"?v:r.type==="imagery-tile"?d:T,t=r.type==="wcs"?l:y;return o({layer:r,itemType:t,validateLayer:m,createItemData:n,errorNamePrefix:a},e)}async function F(r,e,a){const t=r.type==="imagery"?f:r.type==="imagery-tile"?I:w,i=r.type==="wcs"?l:y;return c({layer:r,itemType:i,validateLayer:m,createItemData:n,errorNamePrefix:t,newItem:e,setItemProperties:x},a)}export{S as save,F as saveAs};
