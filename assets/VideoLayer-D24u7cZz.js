import{cg as S,ap as b,o as e,v as r,w as h,bG as C,bp as c,bs as w,ck as x,a9 as $,x as v,P as N,bb as U,d as j,s as g,a6 as O,b7 as E,d3 as k,bE as P}from"./index-DMJZMQ0x.js";import{S as F}from"./MultiOriginJSONSupport-BKwLQMqr.js";import{p as J}from"./BlendLayer-DBAJyM7P.js";import{e as L}from"./CustomParametersMixin-Djq8pCkw.js";import{t as R}from"./ScaleRangeLayer-CIxPsAOZ.js";import{y as M}from"./commonProperties-BSc0wiQC.js";import{A as _}from"./serviceCapabilitiesUtils-CxlPmb15.js";import{C as H,L as q,f as V,g as z,P as G,d as D,n as W,l as A}from"./VideoController-Det0IWhY.js";import{l as T}from"./TelemetryDisplay-DtgLgCt_.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DODzjMeu.js";import"./parser-3OyiJfZK.js";import"./ElevationInfo-C_CfKxNk.js";import"./lengthUtils-BusC8tWV.js";import"./infoFor3D-dHKPbXlj.js";import"./mat3f64-q3fE-ZOt.js";import"./spatialReferenceEllipsoidUtils-qtn0YL10.js";import"./_commonjsHelpers-DCkdB7M8.js";let a=class extends S.ClonableMixin(b){constructor(t){super(t),this.framerate=null,this.containerFormat=null,this.gop=null,this.aspectRatio=null,this.klv=null}};e([r({type:String})],a.prototype,"framerate",void 0),e([r({type:String})],a.prototype,"containerFormat",void 0),e([r({type:Number})],a.prototype,"gop",void 0),e([r({type:String})],a.prototype,"aspectRatio",void 0),e([r({type:Object})],a.prototype,"klv",void 0),a=e([h("esri.layers.support.PlaybackInfo")],a);const B=a;let y=class extends x{constructor(){super(...arguments),this.sourcePoint=null,this.mapPoint=null}};function Q(t){return(t==null?void 0:t.sourcePoint)!=null&&t.mapPoint!=null}e([r()],y.prototype,"sourcePoint",void 0),e([r({type:C})],y.prototype,"mapPoint",void 0),y=e([h("esri.layers.support.VideoFrame.ControlPoint")],y);let p=class extends S.ClonableMixin(b){constructor(t){super(t),this.frame=null,this.controlPoints=null}readControlPoints(t){return t.map(l=>({sourcePoint:{x:l.frameX,y:l.frameY},mapPoint:new C(l.point)}))}writeControlPoints(t,l){t!=null&&Q(t[0])&&(l.controlPoints=t.map(i=>{const n=i.sourcePoint,u=i.mapPoint;return{frameX:n.x,frameY:n.y,point:u.toJSON()}}))}};e([r({type:String})],p.prototype,"frame",void 0),e([r({type:[y],json:{write:{allowNull:!1,isRequired:!0}}})],p.prototype,"controlPoints",void 0),e([c("controlPoints")],p.prototype,"readControlPoints",null),e([w("controlPoints")],p.prototype,"writeControlPoints",null),p=e([h("esri.layers.support.VideoFrame")],p);const X=p;let o=class extends J(R(F(L(k)))){constructor(t){super(t),this._trailPoints=[],this.capabilities=null,this.connectionInfo=null,this.controller=new H,this.copyright=null,this.created=null,this.description=null,this.elevationSource=null,this.frame=null,this.frameCount=null,this.fullExtent=null,this.initialExtent=null,this.layerId=null,this.playbackInfo=null,this.posterUrl=null,this.qualities=null,this.serviceItemId=null,this.sourceJSON=null,this.sourceQuality=null,this.sourceType=null,this.spatialReference=$.WGS84,this.telemetryDisplay=null,this.title=null,this.type="video",this.url=null,this.videoLayersInfo=null,this.videoTimeExtent=null}initialize(){this.telemetryDisplay=new T({frame:!1,frameCenter:!1,frameOutline:!0,lineOfSight:!0,sensorLocation:!0,sensorTrail:!0}),this.addHandles([v(()=>this.metadata,()=>{this.notifyChange("telemetry"),this.notifyChange("groundControlPoints"),this.notifyChange("frameHorizonPoints")}),v(()=>{var t;return(t=this.telemetry)==null?void 0:t.sensorLocation},t=>this._setSensorTrail(t),N)])}load(t){const l=t!=null?t.signal:null;return this.addResolvingPromise(this._fetchService(l)),Promise.resolve(this)}get buffered(){return this.controller.buffered}readCapabilitiesFromService(t,l){return _(l)}readConnectionInfo(t,l){const i=Object.values(l.connectionUrl);return i!=null&&i.length&&(this.controller.playerUrl=i[0]),l.connectionUrl}get currentTime(){return this.controller.currentTime}get duration(){return this.controller.duration}get ended(){return this.controller.ended}get frameHorizonPoints(){return q(this.metadata)}get groundControlPoints(){return V(this.metadata)}get loop(){return this.controller.loop}set loop(t){this.controller.loop=t}get metadata(){var t;return(t=this.controller)==null?void 0:t.currentMetadata}get mimeType(){var t;return(t=this.controller)==null?void 0:t.mimeType}get muted(){return this.controller.muted}set muted(t){this.controller.muted=t}get playbackRate(){return this.controller.rate}set playbackRate(t){this.controller.rate=t}get playerUrl(){return this.controller.playerUrl}get playing(){return this.controller.playing}get state(){return this.controller.state}get telemetry(){return z(this.metadata)}get videoElement(){var t;return(t=this.controller)==null?void 0:t.element}get videoHeight(){var t;return(t=this.controller)==null?void 0:t.videoHeight}readLayerInfosFromService(t,l){return G(l)}get videoWidth(){var t;return(t=this.controller)==null?void 0:t.videoWidth}get waiting(){return this.controller.waiting}play(){this.controller.play()}pause(){this.controller.pause()}reset(){this.controller.reset()}setCurrentTime(t){if(!this.duration)return;const l=U(t,0,this.duration);this.controller.setCurrentTime(l)}toGround(t,l){var i,n;return(n=(i=this.controller)==null?void 0:i.sensorModel)!=null&&n.metadataSupportsTransforms?this.controller.sensorModel.transformImageToGeo(t,l):null}toVideo(t){var i,n;if(!((n=(i=this.controller)==null?void 0:i.sensorModel)!=null&&n.metadataSupportsTransforms))return null;const l=this.controller.sensorModel.transformGeoToImage(t.x,t.y,t.z);return{x:l[0],y:l[1]}}async _fetchService(t){var m,f;if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const l=j((m=this.parsedUrl)==null?void 0:m.path);if(l==null)throw new g("arcgis-layers:url-mismatch","The url is not a valid arcgis resource");let i=null;const{data:n,ssl:u}=await O(l.url.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:t}),s=n;if(this.url=l.url.path,u&&(this.url=this.url.replace(/^http:/i,"https:")),!(s!=null&&s.currentVersion))return s.currentVersion="11.2",this.sourceJSON=s,void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});let d=l==null?void 0:l.sublayer;if(d==null&&((f=s.layers)!=null&&f.length)&&(d=s.layers[0].id),d==null)throw new g("arcgis-layers:url-mismatch","The url is not a valid arcgis resource");this.url=`${l.url.path}/${d}`,i=await O(this.url,{query:{f:"json",...this.customParameters},signal:t});const I={...s,...i.data};this.sourceJSON=I,this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl})}_setSensorTrail(t){if(!t)return;const l=D(t,this._trailPoints);this._trailPoints=[...l];const i=this._trailPoints.map(u=>u.toArray()),n=new E({hasZ:t.hasZ,paths:[i]});this.telemetry.sensorTrail=n.clone()}};e([r({readOnly:!0})],o.prototype,"buffered",null),e([r({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",void 0),e([c("service","capabilities",["supportsAppend","supportsCoverageQuery","supportsExportClip","supportsExportFrameset","supportsMensuration","supportsUpdate"])],o.prototype,"readCapabilitiesFromService",null),e([r({readOnly:!0})],o.prototype,"connectionInfo",void 0),e([c("connectionInfo",["connectionUrl"])],o.prototype,"readConnectionInfo",null),e([r()],o.prototype,"controller",void 0),e([r({type:String})],o.prototype,"copyright",void 0),e([r({readOnly:!0,type:Date})],o.prototype,"created",void 0),e([r({type:Number})],o.prototype,"currentTime",null),e([r({type:String})],o.prototype,"description",void 0),e([r({type:Number})],o.prototype,"duration",null),e([r({readOnly:!0})],o.prototype,"elevationSource",void 0),e([r({type:Boolean})],o.prototype,"ended",null),e([r({type:X})],o.prototype,"frame",void 0),e([r({readOnly:!0,type:Number})],o.prototype,"frameCount",void 0),e([r({type:P})],o.prototype,"fullExtent",void 0),e([r({readOnly:!0})],o.prototype,"frameHorizonPoints",null),e([r({readOnly:!0})],o.prototype,"groundControlPoints",null),e([r({type:P})],o.prototype,"initialExtent",void 0),e([r({readOnly:!0,json:{read:{source:"id"}}})],o.prototype,"layerId",void 0),e([r({type:Boolean})],o.prototype,"loop",null),e([r({readOnly:!0})],o.prototype,"metadata",null),e([r({readOnly:!0})],o.prototype,"mimeType",null),e([r({type:Boolean})],o.prototype,"muted",null),e([r({type:B})],o.prototype,"playbackInfo",void 0),e([r({type:Number})],o.prototype,"playbackRate",null),e([r({type:String})],o.prototype,"playerUrl",null),e([r({readOnly:!0})],o.prototype,"playing",null),e([r({readOnly:!0,json:{read:{source:"poster"}}})],o.prototype,"posterUrl",void 0),e([r({readOnly:!0})],o.prototype,"qualities",void 0),e([r({readOnly:!0})],o.prototype,"serviceItemId",void 0),e([r()],o.prototype,"sourceJSON",void 0),e([r({readOnly:!0})],o.prototype,"sourceQuality",void 0),e([r({readOnly:!0,json:{name:"serviceType"}})],o.prototype,"sourceType",void 0),e([r()],o.prototype,"spatialReference",void 0),e([r({readOnly:!0,type:String})],o.prototype,"state",null),e([r({readOnly:!0,type:W})],o.prototype,"telemetry",null),e([r({type:T})],o.prototype,"telemetryDisplay",void 0),e([r({readOnly:!1,json:{read:{source:"name"}}})],o.prototype,"title",void 0),e([r({readOnly:!0})],o.prototype,"type",void 0),e([r(M)],o.prototype,"url",void 0),e([r({readOnly:!0})],o.prototype,"videoElement",null),e([r({readOnly:!0})],o.prototype,"videoHeight",null),e([r({readOnly:!0,json:{read:!1}})],o.prototype,"videoLayersInfo",void 0),e([c("service","videoLayersInfo",["id","name","poster","serviceType","type"])],o.prototype,"readLayerInfosFromService",null),e([r({readOnly:!0,nonNullable:!1,json:{read:{reader:A,source:"time"}}})],o.prototype,"videoTimeExtent",void 0),e([r({readOnly:!0})],o.prototype,"videoWidth",null),e([r({readOnly:!0})],o.prototype,"waiting",null),o=e([h("esri.layers.VideoLayer")],o);const mt=o;export{mt as default};
