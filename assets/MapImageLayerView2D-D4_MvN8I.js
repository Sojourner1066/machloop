import{a0 as r,a1 as a,a2 as n,cD as l,cg as d,ab as u,cQ as c,cI as y,bT as m,cJ as f}from"./index-BCSVvjKE.js";import{r as _}from"./BitmapContainer-BAc12lbc.js";import{S as x,y as H}from"./LayerView-CLlz1xmb.js";import{A as w}from"./GraphicsView2D-BCpuNJlL.js";import{h as v}from"./HighlightGraphicContainer-CAMg5eTc.js";import{_ as I}from"./ExportStrategy-g0sbgl-i.js";import{y as V}from"./ExportImageParameters-B6eKvDoL.js";import{i as E}from"./timeSupport-5XGO9pvP.js";import{i as b}from"./RefreshableLayerView-Bd898Vj9.js";import{S as G}from"./MapServiceLayerViewHelper-Cm1C6ycv.js";import{r as P}from"./drapedUtils-CB5UOLwq.js";import"./WGLContainer-B7ZgRvVt.js";import"./Utils-D4O3KAMI.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-7-I-ic88.js";import"./VertexArrayObject-CWSP7Dtc.js";import"./memoryEstimations-B7_Jwj04.js";import"./vec3f32-nZdmKIgz.js";import"./Container-CNbOd1fT.js";import"./StyleDefinition-BnwSCDGd.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-D8tC_IN5.js";import"./OptimizedFeature-CAs8C_6w.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BitmapTechnique-Ctzfck9e.js";import"./GraphShaderModule-CGrQHD0I.js";import"./FramebufferObject-CHpIv-62.js";import"./ShaderBuilder-4Epc3uLW.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./layerViewUtils-0c-tok9A.js";import"./UpdateTracking2D-BabZ4s23.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-UTnbVDfc.js";import"./rasterizingUtils-DiZURDwE.js";import"./floatRGBA-CFy-2SA-.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-DHz01mPW.js";import"./colorUtils-DSamnXnQ.js";import"./quantizationUtils-CrQL7F8F.js";import"./AttributeStore-rRtoSbdP.js";import"./queryUtils-BoaFe4en.js";import"./json-Wa8cmqdu.js";import"./timeSupport-B-rYk-YC.js";import"./TimeOnly-CVgLqrpK.js";import"./FeatureCommandQueue-DsslgJpE.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DF79sej7.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-B1HzKDFh.js";import"./dehydratedFeatures-ILc6Rtrm.js";import"./AGraphicContainer-C5AAy4ti.js";import"./TechniqueInstance-CIvSNEhV.js";import"./TileContainer-DRvhRlwz.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-WkQInJ6V.js";import"./popupUtils-Ckrzy3Gu.js";const U=i=>{let t=class extends i{initialize(){this.exportImageParameters=new V({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return E(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return r([a()],t.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],t.prototype,"floors",null),r([a({readOnly:!0})],t.prototype,"exportImageVersion",null),r([a()],t.prototype,"layer",void 0),r([a()],t.prototype,"suspended",void 0),r([a({readOnly:!0})],t.prototype,"timeExtent",null),t=r([n("esri.views.layers.MapImageLayerView")],t),t};let o=class extends U(b(x(H))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeaturesAtLocation(i,t){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(i,t)}update(i){const t=`${this.exportImageVersion}/${i.state.id}/${i.pixelRatio}/${i.stationary}`;this._updateHash!==t&&(this._updateHash=t,this.strategy.update(i).catch(e=>{d(e)||u.getLogger(this).error(e)}),i.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(i.state.resolution)),this._highlightView.processUpdate(i)}attach(){const{imageMaxWidth:i,imageMaxHeight:t,version:e}=this.layer,s=e>=10.3,g=e>=10;this._bitmapContainer=new _,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(h,p)=>P(h,p,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,p)=>{this._highlightView.graphicUpdateHandler({graphic:h,property:p})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new I({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:i,imageMaxHeight:t,imageRotationSupported:s,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(i){return this.layer.serviceSupportsSpatialReference(i)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(i,t,e,s){return this.layer.fetchImage(i,t,e,{timeExtent:this.timeExtent,floors:this.floors,...s})}fetchImageBitmap(i,t,e,s){return this.layer.fetchImageBitmap(i,t,e,{timeExtent:this.timeExtent,floors:this.floors,...s})}highlight(i,t){const e=y(i);if(e.length===0)return m();const s=(t==null?void 0:t.name)??f;return this._addHighlightGraphics(e,s),m(()=>!this.destroyed&&this._removeHighlightGraphics(e,s))}_processHighlight(){var t;const i=this._getHighlights();(t=this._highlightView)==null||t.setHighlight(i)}_addHighlightGraphics(i,t){this._highlightGraphics.addMany(i),this._addHighlights(i.map(e=>e.uid),t)}_removeHighlightGraphics(i,t){this._highlightGraphics.removeMany(i),this._removeHighlights(i.map(e=>e.uid),t)}};r([a()],o.prototype,"strategy",void 0),r([a()],o.prototype,"updating",void 0),o=r([n("esri.views.2d.layers.MapImageLayerView2D")],o);const Mt=o;export{Mt as default};
