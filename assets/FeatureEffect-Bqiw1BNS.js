import{ap as m,s as c,o as s,v as d,cd as w,w as y}from"./index-BCOvYjsd.js";import{a as o,n as a}from"./jsonUtils--jgndNN5.js";import{d as x}from"./FeatureFilter-B_Ic7umv.js";var n;const p={read:{reader:a},write:{writer:o,overridePolicy(){return{allowNull:this.excludedEffect!=null,isRequired:this.excludedEffect==null}}}},h={read:{reader:a},write:{writer:o,overridePolicy(){return{allowNull:this.includedEffect!=null,isRequired:this.includedEffect==null}}}},b={name:"showExcludedLabels",default:!0};let r=n=class extends m{constructor(l){super(l),this.filter=null,this.includedEffect=null,this.excludedEffect=null,this.excludedLabelsVisible=!1}write(l,e){var u,i;const t=super.write(l,e);if(e!=null&&e.origin){if(t.filter){const f=Object.keys(t.filter);if(f.length>1||f[0]!=="where")return(u=e.messages)==null||u.push(new c("web-document-write:unsupported-feature-effect","Invalid feature effect 'filter'. A filter can only contain a 'where' property",{layer:e.layer,effect:this})),null}if("showExcludedLabels"in t)return(i=e.messages)==null||i.push(new c("web-document-write:unsupported-feature-effect","Invalid value for property 'excludedLabelsVisible' which should always be 'true'",{layer:e.layer,effect:this})),null}return t}clone(){return new n({filter:this.filter!=null?this.filter.clone():null,includedEffect:this.includedEffect,excludedEffect:this.excludedEffect,excludedLabelsVisible:this.excludedLabelsVisible})}};s([d({type:x,json:{write:{allowNull:!0,writer(l,e,t,u){const i=l==null?void 0:l.write({},u);i&&Object.keys(i).length!==0?w(t,i,e):w(t,null,e)}}}})],r.prototype,"filter",void 0),s([d({json:{read:a,write:{writer:o,allowNull:!0},origins:{"web-map":p,"portal-item":p}}})],r.prototype,"includedEffect",void 0),s([d({json:{read:a,write:{writer:o,allowNull:!0},origins:{"web-map":h,"portal-item":h}}})],r.prototype,"excludedEffect",void 0),s([d({type:Boolean,json:{write:!0,name:"showExcludedLabels",origins:{"web-map":b,"portal-item":b}}})],r.prototype,"excludedLabelsVisible",void 0),r=n=s([y("esri.layers.support.FeatureEffect")],r);const L=r;export{L as w};
