import{ao as z,bW as O,a9 as A,dg as C,bg as G,bG as R,dh as v,s as E,cA as Y}from"./index-BK4NQ6A4.js";import{j as D}from"./quantizationUtils-CNqJlHNv.js";import{u as S,l as V}from"./heatmapUtils-6IWAjZwG.js";import{$ as L}from"./utils-BYlckGVn.js";import{m as j,B as P}from"./utils-ClNWe8-c.js";let c=null;const _=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function ee(e,t,n,i){const r=C(n)?G(n):null,s=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(a=>{const l=new R(a.geometry);return D(t,l,l),a.geometry=r?k(l,s??0,i[0]):l,a})}function te(e,t=18,n,i,r){const s=new Float64Array(i*r);t=Math.round(Y(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const I=S(n);for(const{geometry:p,attributes:F}of e){const{x:y,y:f}=p,$=Math.max(0,y-t),N=Math.max(0,f-t),M=Math.min(r,f+t),w=Math.min(i,y+t),h=+I(F);for(let m=N;m<M;m++)for(let d=$;d<w;d++){const x=m*i+d,b=V(d-y,m-f,t)*h,u=s[x]+=b;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function q(e){const t=_.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:s}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(s||0)}async function ne(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:s,fieldDelimiter:a,fieldInfos:l,timeZone:I}=e,p=i&&(l==null?void 0:l.find(u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&z(p),y=!!p&&L(p),f=e.valueExpression,$=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await O();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new A(h.spatialReference)}):null}const x=e.fieldInfos,b=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const g=u.attributes;let o;if(f){const T=b?{...u,layer:b}:u,U=c.createExecContext(T,d,I);o=c.executeFunction(m,U)}else g&&(o=g[i],r?(o=`${j(o)}${a}${j(g[r])}`,s&&(o=`${o}${a}${j(g[s])}`)):typeof o=="string"&&n&&(y?o=o?new Date(o).getTime():null:F&&(o=o?q(o):null)));if($&&typeof o=="number"&&isFinite(o)){const T=g&&parseFloat(g[N]);o=P(o,$,T,M)}w.push(o)}),w}function ie(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function re(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let s="";return s=i&&r?B(i,r):i||r,s?"("+s+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function oe(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function se(e,t,n){const i=W({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=Z({layer:e,fields:t});return r.length?new E(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function W(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Z(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ie as F,q as I,oe as M,re as N,se as T,B as U,ne as b,te as w,ee as x};
